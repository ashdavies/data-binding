import io.ashdavies.playground.conferences.CfpId;
import io.ashdavies.playground.conferences.ConferenceId;
import kotlinx.datetime.LocalDate;

CREATE TABLE conference(
    id INTEGER AS ConferenceId NOT NULL UNIQUE PRIMARY KEY,

    name TEXT NOT NULL,
    website TEXT NOT NULL,
    location TEXT NOT NULL,
    status TEXT,
    dateStart TEXT AS LocalDate NOT NULL,
    dateEnd TEXT AS LocalDate NOT NULL,
    cfpId INTEGER AS CfpId,
    online INTEGER AS Boolean,

    FOREIGN KEY(cfpId) REFERENCES cfp(id) ON DELETE CASCADE
);

CREATE TABLE cfp(
    id INTEGER AS CfpId NOT NULL UNIQUE PRIMARY KEY,

    start TEXT AS LocalDate NOT NULL,
    end TEXT AS LocalDate NOT NULL,
    site TEXT NOT NULL
);

selectAllConferences:
    SELECT *
    FROM conference
    LEFT JOIN cfp ON conference.cfpId = cfp.id
    ORDER BY dateStart;

selectConferenceById:
    SELECT *
    FROM conference
    LEFT JOIN cfp ON conference.cfpId = cfp.id
    WHERE conference.id = ?;

insertOrReplaceConference:
    INSERT OR REPLACE INTO conference(
        id,
        name,
        website,
        location,
        status,
        dateStart,
        dateEnd,
        cfpId,
        online
    )
    VALUES ?;

insertOrReplaceCfp:
    INSERT OR REPLACE INTO cfp(
        id,
        start,
        end,
        site
    )
    VALUES ?;

deleteAllConferences:
    DELETE FROM conference;

deleteConferenceById:
    DELETE FROM conference WHERE id = :id;
